
import mysql.connector
import paho.mqtt.client as mqttClient
import time
import json
broker_address= "127.0.0.1"  #Broker address
port = 1883                         #Broker port
topic1 = "akg"
instance = "localSub1"
print( "topic :",topic1)
print( "IP:",broker_address)
print( "Instance:",instance)

def on_connect(client, userdata, flags, rc):
    if rc == 0:
        print("Connected to broker")
        global Connected                #Use global variable
        Connected = True                #Signal connection
    else:
        print("Connection failed")

def on_message(client, userdata, message):
        msg = message.payload
        print ("Received Message: "  + msg)
        x = json.loads(msg)
        data1 = str(x["name"])
        data2 = str(x["val"])
        print ('Received Message: ' + data1 )
        print ('Received Message: ' + data2 )
        try:
             cnx = mysql.connector.connect(  user='vaibhav',
                                        password='vaibhav@123',
                                        host='127.0.0.1',
                                        database='testdb')

             cursor = cnx.cursor()
             query = "INSERT INTO `test1` (`ID`, `TIME`, `Value`, `SENSOR_NAME`) VALUES (NULL, CURRENT_TIMESTAMP, '" + data2 +"', '" + data1 +"');"
             print("Databse Updated...")
             cursor.execute(query)
             cnx.commit()
             cursor.close()
        except mysql.connector.Error as e:
            print(e)
            print("error");
        cnx.close()

Connected = False   #global variable for the state of the connection
client = mqttClient.Client(instance)               #create new instance

client.on_connect= on_connect                      #attach function to callback
client.on_message= on_message                      #attach function to callback
client.connect(broker_address, port=port)          #connect to broker
client.loop_start()        #start the loop
while Connected != True:    #Wait for connection
    time.sleep(0.1)

client.subscribe(topic1)

try:
    while True:
        time.sleep(1)

except KeyboardInterrupt:
    print( "exiting")
    client.disconnect()
